name: SnoopCompile

on:
  push:
    branches:
      - master  # NOTE: to run the bot only on pushes to master

defaults:
  run:
    shell: bash

jobs:
  SnoopCompile:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      matrix:
        # NOTE: only keep the versions you want to support
        # NOTE: if not using `yml_path`, these should match the version in `BotConfig`
        version:
          - '1.6'
          - '1.7'
        os:        # NOTE: if not using `yml_path`, these should match the os in `BotConfig`
          - ubuntu-latest
          - windows-latest
          - macos-latest
        arch:
          - x64

    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}

      - name: Install dependencies
        run: |
          julia --project -e 'using Pkg; Pkg.instantiate();'
          julia -e 'using Pkg; Pkg.add( PackageSpec(name="CompileBot", version = "1") );
                    Pkg.develop(PackageSpec(; path=pwd()));
                    using CompileBot; CompileBot.addtestdep();'

      - name: Generating precompile files
        run: julia --project -e 'include("deps/SnoopCompile/snoop_bot.jl")'   # NOTE: notice the path

      - name: Running Benchmark
        run: julia --project -e 'include("deps/SnoopCompile/snoop_bench.jl")' # NOTE: optional, if have benchmark file

      - name: Upload all
        continue-on-error: true # due to connection issues
        uses: actions/upload-artifact@v2.0.1
        with:
          path: ./

  Create_PR:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: SnoopCompile
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download all
        uses: actions/download-artifact@v2

      - name: CompileBot postprocess
        run: julia -e 'using Pkg; Pkg.add( PackageSpec(name="CompileBot", version = "1") );
                       using CompileBot; CompileBot.postprocess();'

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update precompile_*.jl file
          title: "[AUTO] Update precompiles"
          labels: SnoopCompile
          branch: "SnoopCompile_AutoPR_${{ github.ref }}"


  Skip:
    if: "contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Skip CI ðŸš«
        run: echo skip ci